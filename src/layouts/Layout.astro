---
import MainHeaderReact from "../components/MainHeaderReact";
import type { LanguagesContent } from "../types/content";
import { ContentPage } from "../data";
import "../styles/base.css";
import Footer from "../components/contentPage/Footer.astro";
import ToastContainerInitial from "../components/basic/ToastContainerInitial";
import "@splidejs/splide/css";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.min.css";

interface Props {
  language: LanguagesContent;
  changeLanguageUrl?: string;
}

const { language, changeLanguageUrl } = Astro.props;

const { title } = ContentPage[language || "es"];

const currenPath = Astro.url.pathname;
---

<!doctype html>
<html lang={language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link href="/assets/icons/icons.css" rel="stylesheet" />
  </head>
  <body class="text-slate-700">
    <script>
      import { $currentTheme } from "../stores/themeStore";

      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        $currentTheme.set("dark");
      } else {
        $currentTheme.set("light");
      }

      $currentTheme.subscribe((value, oldValue) => {
        if (value !== oldValue) {
          if (value === "light") {
            localStorage.theme = "light";
            document.documentElement.classList.remove("dark");
          } else {
            localStorage.theme = "dark";
            document.documentElement.classList.add("dark");
          }
        }
      });
    </script>
    <MainHeaderReact
      language={language}
      currentPath={currenPath}
      changeLanguageUrl={changeLanguageUrl}
      client:load
    />
    <div class="pt-16 lg:pt-20 dark:bg-primary-800">
      <slot />
    </div>
    <Footer language={language} />
    <ToastContainerInitial client:load />
  </body>
</html>
